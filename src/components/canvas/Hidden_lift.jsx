/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 hidden_lift.glb --draco 
*/

import React, { useRef, useState, useEffect } from "react";
import { useGLTF } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";
import { lerp } from "three/src/math/MathUtils";

export let liftModelgroup = null;

function HiddenLift_Model(props) {
  liftModelgroup = useRef();
  const { nodes, materials } = useGLTF('./3d_models/hidden_lift.glb')

  const offsetY = -1.2;

  // animate
  useFrame((state) => {
    const t = state.clock.getElapsedTime();
    liftModelgroup.current.rotation.x = lerp(
      liftModelgroup.current.rotation.x,
      Math.cos(t / 4) / 20 + 0.25,
      0.1
    );
    liftModelgroup.current.rotation.y = lerp(
      liftModelgroup.current.rotation.y,
      Math.sin(t / 4) / 2 - t * 0.02, // Subtrahend zur Kompensierung des autoRotate
      0.1
    );
    liftModelgroup.current.rotation.z = lerp(
      liftModelgroup.current.rotation.z,
      Math.sin(t / 8) / 40,
      0.1
    );
    liftModelgroup.current.position.y = lerp(
      liftModelgroup.current.position.y,
      offsetY + Math.sin(t / 2) / 4,
      1
    );
  });

  return (
    <group
      ref={liftModelgroup}
      {...props}
      dispose={null}
      visible={true}
      scale={0.0235}
      position={[0, 0, 0]}
    >
      <mesh geometry={nodes.Hidden_Lift_v112_1.geometry} material={materials['3D_Maple_-_Glossy']} />
      <mesh geometry={nodes.Hidden_Lift_v112_2.geometry} material={materials['Aluminum_-_Satin']} />
      <mesh geometry={nodes.Hidden_Lift_v112_3.geometry} material={materials['Plastic_-_Translucent_Glossy_(Blue)']} />
      <mesh geometry={nodes.Hidden_Lift_v112_4.geometry} material={materials['Steel_-_Satin']} />
      <mesh geometry={nodes.Hidden_Lift_v112_5.geometry} material={materials['ABS_(White)']} />
      <mesh geometry={nodes.Hidden_Lift_v112_6.geometry} material={materials['Opaque(255,255,255)']} />
      <mesh geometry={nodes.Hidden_Lift_v112_7.geometry} material={materials['Opaque(75,75,75)']} />
      <mesh geometry={nodes.Hidden_Lift_v112_8.geometry} material={materials['Opaque(255,242,232)']} />
      <mesh geometry={nodes.Hidden_Lift_v112_9.geometry} material={materials['Opaque(160,160,160)']} />
      <mesh geometry={nodes.Hidden_Lift_v112_10.geometry} material={materials['Opaque(188,188,188)']} />
      <mesh geometry={nodes.Hidden_Lift_v112_11.geometry} material={materials['Opaque(204,204,204)']} />
      <mesh geometry={nodes.Hidden_Lift_v112_12.geometry} material={materials['Opaque(44,44,44)']} />
      <mesh geometry={nodes.Hidden_Lift_v112_13.geometry} material={materials['Opaque(203,203,203)']} />
      <mesh geometry={nodes.Hidden_Lift_v112_14.geometry} material={materials['Opaque(246,246,243)']} />
      <mesh geometry={nodes.Hidden_Lift_v112_15.geometry} material={materials['Opaque(64,64,64)']} />
      <mesh geometry={nodes.Hidden_Lift_v112_16.geometry} material={materials['Opaque(204,207,204)']} />
      <mesh geometry={nodes.Hidden_Lift_v112_17.geometry} material={materials['Opaque(0,150,247)']} />
      <mesh geometry={nodes.Hidden_Lift_v112_18.geometry} material={materials['Aluminum_-_Bead_Blasted']} />
      <mesh geometry={nodes.Hidden_Lift_v112_19.geometry} material={materials['Opaque(242,242,255)']} />
      <mesh geometry={nodes.Hidden_Lift_v112_20.geometry} material={materials['Opaque(129,155,120)']} />
      <mesh geometry={nodes.Hidden_Lift_v112_21.geometry} material={materials['Opaque(165,170,180)']} />
      <mesh geometry={nodes.Hidden_Lift_v112_22.geometry} material={materials['Opaque(128,255,128)']} />
      <mesh geometry={nodes.Hidden_Lift_v112_23.geometry} material={materials['Opaque(255,214,0)']} />
      <mesh geometry={nodes.Hidden_Lift_v112_24.geometry} material={materials['Opaque(178,185,185)']} />
      <mesh geometry={nodes.Hidden_Lift_v112_25.geometry} material={materials['Opaque(3,5,10)']} />
      <mesh geometry={nodes.Hidden_Lift_v112_26.geometry} material={materials['Opaque(255,215,0)']} />
      <mesh geometry={nodes.Hidden_Lift_v112_27.geometry} material={materials['Opaque(0,192,0)']} />
      <mesh geometry={nodes.Hidden_Lift_v112_28.geometry} material={materials['Opaque(255,0,0)']} />
      <mesh geometry={nodes.Hidden_Lift_v112_29.geometry} material={materials['Opaque(165,158,150)']} />
    </group>
  )
}

useGLTF.preload('./3d_models/hidden_lift.glb')
export default <HiddenLift_Model />;
